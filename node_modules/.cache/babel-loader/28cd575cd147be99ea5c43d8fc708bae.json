{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/Button/TimerBtn.js\";\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useClickOutside from '../../hooks/useClickOutside';\nconst BtnContainer = styled.div`\n  position: absolute;\n  top: 5rem;\n  right: 0;\n  border-radius: 7px 0 0 7px;\n  color: white;\n  background: black;\n  width: ${props => props.isOpen ? '10rem' : '3rem'};\n  height: 8rem;\n  ${''\n/* display: flex;\njustify-content: ${props => (props.isOpen ? 'flex-start' : 'center')};\nalign-items: center; */\n}\n  cursor: pointer;\n  transition: all 0.3s ease-in;\n`;\nconst Span = styled.span`\n  display: inline-block;\n  transform: rotate(270deg);\n  letter-spacing: 4px;\n  font-size: 1.2rem;\n\n  background: red;\n  position: absolute;\n  ${''\n/* top: 0; */\n}\n  left: 0;\n  bottom: 0;\n`;\nconst SubBtn = styled.button`\n  display: block;\n  background: transparent;\n  color: white;\n  font-size: 1rem;\n  font-weight: 700;\n  text-align: left;\n  cursor: pointer;\n  margin: 5px;\n`;\n\nfunction TimerBtn({\n  onClick\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef();\n  const times = [{\n    duration: 300,\n    text: '5 min'\n  }, {\n    duration: 600,\n    text: '10 min'\n  }, {\n    duration: 900,\n    text: '15 min'\n  }];\n\n  const handleClick = e => {\n    if (e.target.id !== 'timeBtn') setIsOpen(!isOpen);\n  };\n\n  useClickOutside(ref, () => {\n    setIsOpen(false);\n  });\n  const buttons = times.map((t, i) => /*#__PURE__*/React.createElement(SubBtn, {\n    id: \"timeBtn\",\n    onClick: () => onClick(t.duration),\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, t.text));\n  return /*#__PURE__*/React.createElement(BtnContainer, {\n    onClick: handleClick,\n    isOpen: isOpen,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Span, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"TIMER\"), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 18\n    }\n  }, buttons));\n}\n\nTimerBtn.propTypes = {\n  onClick: PropTypes.func\n};\nexport default TimerBtn;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/Button/TimerBtn.js"],"names":["React","useState","useRef","styled","PropTypes","useClickOutside","BtnContainer","div","props","isOpen","Span","span","SubBtn","button","TimerBtn","onClick","setIsOpen","ref","times","duration","text","handleClick","e","target","id","buttons","map","t","i","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAI;;;;;;;WAOrBC,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,OAAf,GAAyB,MAAQ;;IAElD;AAAG;;;AAEmB;;;CAX1B;AAgBA,MAAMC,IAAI,GAAGP,MAAM,CAACQ,IAAK;;;;;;;;IAQrB;AAAG;AAAc;;;CARrB;AAaA,MAAMC,MAAM,GAAGT,MAAM,CAACU,MAAO;;;;;;;;;CAA7B;;AAWA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC7B,QAAM,CAACN,MAAD,EAASO,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMgB,GAAG,GAAGf,MAAM,EAAlB;AAEA,QAAMgB,KAAK,GAAG,CACZ;AAAEC,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GADY,EAEZ;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAFY,EAGZ;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAHY,CAAd;;AAMA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,SAApB,EAA+BR,SAAS,CAAC,CAACP,MAAF,CAAT;AAChC,GAFD;;AAIAJ,EAAAA,eAAe,CAACY,GAAD,EAAM,MAAM;AACzBD,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFc,CAAf;AAIA,QAAMS,OAAO,GAAGP,KAAK,CAACQ,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACxB,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAE,MAAMb,OAAO,CAACY,CAAC,CAACR,QAAH,CAA3C;AAAyD,IAAA,GAAG,EAAES,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,CAAC,CAACP,IADL,CADc,CAAhB;AAMA,sBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEC,WAAvB;AAAoC,IAAA,MAAM,EAAEZ,MAA5C;AAAoD,IAAA,GAAG,EAAEQ,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGR,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMgB,OAAN,CAFb,CADF;AAMD;;AAEDX,QAAQ,CAACe,SAAT,GAAqB;AACnBd,EAAAA,OAAO,EAAEX,SAAS,CAAC0B;AADA,CAArB;AAIA,eAAehB,QAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport useClickOutside from '../../hooks/useClickOutside';\n\nconst BtnContainer = styled.div`\n  position: absolute;\n  top: 5rem;\n  right: 0;\n  border-radius: 7px 0 0 7px;\n  color: white;\n  background: black;\n  width: ${props => (props.isOpen ? '10rem' : '3rem')};\n  height: 8rem;\n  ${'' /* display: flex;\n  justify-content: ${props => (props.isOpen ? 'flex-start' : 'center')};\n  align-items: center; */}\n  cursor: pointer;\n  transition: all 0.3s ease-in;\n`;\n\nconst Span = styled.span`\n  display: inline-block;\n  transform: rotate(270deg);\n  letter-spacing: 4px;\n  font-size: 1.2rem;\n\n  background: red;\n  position: absolute;\n  ${'' /* top: 0; */}\n  left: 0;\n  bottom: 0;\n`;\n\nconst SubBtn = styled.button`\n  display: block;\n  background: transparent;\n  color: white;\n  font-size: 1rem;\n  font-weight: 700;\n  text-align: left;\n  cursor: pointer;\n  margin: 5px;\n`;\n\nfunction TimerBtn({ onClick }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef();\n\n  const times = [\n    { duration: 300, text: '5 min' },\n    { duration: 600, text: '10 min' },\n    { duration: 900, text: '15 min' },\n  ];\n\n  const handleClick = e => {\n    if (e.target.id !== 'timeBtn') setIsOpen(!isOpen);\n  };\n\n  useClickOutside(ref, () => {\n    setIsOpen(false);\n  });\n\n  const buttons = times.map((t, i) => (\n    <SubBtn id=\"timeBtn\" onClick={() => onClick(t.duration)} key={i}>\n      {t.text}\n    </SubBtn>\n  ));\n\n  return (\n    <BtnContainer onClick={handleClick} isOpen={isOpen} ref={ref}>\n      <Span>TIMER</Span>\n      {isOpen && <div>{buttons}</div>}\n    </BtnContainer>\n  );\n}\n\nTimerBtn.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default TimerBtn;\n"]},"metadata":{},"sourceType":"module"}