{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/containers/Theme/Theme.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { Container } from './ThemeStyles';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport TimerBtn from '../../components/Button/TimerBtn';\nimport PlayBtn from '../../components/Button/PlayBtn';\nimport DynamicText from '../../components/DynamicText/DynamicText';\n\nfunction Theme(props) {\n  const {\n    url\n  } = props;\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  const [duration, setDuration] = useState(10);\n  const [currentTime, setCurrentTime] = useState(0);\n  const location = useLocation();\n  useEffect(() => {\n    console.log('Location changed');\n  }, [location]); // Play audio\n\n  useEffect(() => {\n    // setPlaying(false)\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio, location]);\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]); //Update duration\n\n  useEffect(() => {\n    if (currentTime >= duration) return;\n\n    if (playing) {\n      const token = setTimeout(updateTime, 1000);\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  const handleClick = time => setDuration(time);\n\n  const handleToggle = () => setPlaying(!playing);\n\n  const updateTime = () => {\n    if (playing) setDuration(duration - 1);\n  }; // HERE Warging!\n\n\n  audio.ontimeupdate = () => {\n    setCurrentTime(audio.currentTime);\n\n    if (currentTime > duration) {\n      audio.pause();\n      audio.currentTime = 0;\n      setPlaying(false);\n    }\n  };\n\n  if (currentTime >= duration) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/congraturation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DynamicText, {\n    playing: playing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProgressBar, {\n    playing: playing,\n    duration: duration,\n    currentTime: Math.floor(currentTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PlayBtn, {\n    playing: playing,\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TimerBtn, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), props.children);\n}\n\nexport default React.memo(Theme);","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/containers/Theme/Theme.js"],"names":["React","useState","useEffect","Redirect","useLocation","Container","ProgressBar","TimerBtn","PlayBtn","DynamicText","Theme","props","url","audio","Audio","playing","setPlaying","duration","setDuration","currentTime","setCurrentTime","location","console","log","play","pause","addEventListener","removeEventListener","token","setTimeout","updateTime","cleanUp","clearTimeout","handleClick","time","handleToggle","ontimeupdate","Math","floor","children","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nimport { Container } from './ThemeStyles';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport TimerBtn from '../../components/Button/TimerBtn';\nimport PlayBtn from '../../components/Button/PlayBtn';\n\nimport DynamicText from '../../components/DynamicText/DynamicText';\n\nfunction Theme(props) {\n  const { url } = props;\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  const [duration, setDuration] = useState(10);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log('Location changed');\n  }, [location]);\n\n  // Play audio\n  useEffect(() => {\n    // setPlaying(false)\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio, location]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n\n  //Update duration\n  useEffect(() => {\n    if (currentTime >= duration) return;\n    if (playing) {\n      const token = setTimeout(updateTime, 1000);\n\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  const handleClick = time => setDuration(time);\n  const handleToggle = () => setPlaying(!playing);\n  const updateTime = () => {\n    if (playing) setDuration(duration - 1);\n  };\n\n  // HERE Warging!\n  audio.ontimeupdate = () => {\n    setCurrentTime(audio.currentTime);\n    if (currentTime > duration) {\n      audio.pause();\n      audio.currentTime = 0;\n      setPlaying(false);\n    }\n  };\n\n  if (currentTime >= duration) {\n    return <Redirect to=\"/congraturation\" />;\n  }\n\n  return (\n    <Container>\n      <DynamicText playing={playing} />\n      <ProgressBar\n        playing={playing}\n        duration={duration}\n        currentTime={Math.floor(currentTime)}\n      />\n      <PlayBtn playing={playing} onClick={handleToggle} />\n      <TimerBtn onClick={handleClick} />\n      {props.children}\n    </Container>\n  );\n}\n\nexport default React.memo(Theme);\n"]},"metadata":{},"sourceType":"module"}