{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components'; // const fadein = keyframes`\n//   from   { opacity:0; }\n//   to { opacity:1; }\n// `;\n// const fadeout = keyframes`\n//   from   { opacity:1; }\n//   to { opacity:0; }\n// `;\n\nconst fade = keyframes`\n  0% { opacity: 0; }\n  50% { opacity: 1; }\n  100% { opacity: 0; }\n`;\nconst Text = styled.h3`\n  text-align: center;\n  font-size: 1.7rem;\n  font-weight: 400;\n  letter-spacing: 1px;\n\n  animation: ${fade} 0.3s ease-in;\n`;\n\nfunction DynamicText({\n  playing,\n  textArr\n}) {\n  const [textIdx, setTextIdx] = useState(0);\n  let textThatChanges = textArr[textIdx % textArr.length];\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 3000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [playing]);\n  return /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, textThatChanges);\n}\n\nexport default DynamicText; // function DynamicText({ playing, textArr }) {\n//   const [textIdx, setTextIdx] = useState(0);\n//   let textThatChanges = textArr[textIdx % textArr.length];\n//   const [visible, setVisible] = useState(false);\n//   useEffect(() => {\n//     if (playing) {\n//       const interval = setInterval(() => {\n//         setTextIdx(index => index + 1);\n//       }, 3000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [playing]);\n//   return (\n//     <Text className={visible ? 'fadeIn' : 'fadeOut'}>{textThatChanges}</Text>\n//   );\n// }\n// export default DynamicText;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js"],"names":["React","useState","useEffect","styled","keyframes","fade","Text","h3","DynamicText","playing","textArr","textIdx","setTextIdx","textThatChanges","length","interval","setInterval","index","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAGD,SAAU;;;;CAAvB;AAMA,MAAME,IAAI,GAAGH,MAAM,CAACI,EAAG;;;;;;eAMRF,IAAK;CANpB;;AASA,SAASG,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAArB,EAA2C;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAIY,eAAe,GAAGH,OAAO,CAACC,OAAO,GAAGD,OAAO,CAACI,MAAnB,CAA7B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAJ,EAAa;AACX,YAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCJ,QAAAA,UAAU,CAACK,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAV;AACD,OAF2B,EAEzB,IAFyB,CAA5B;AAGA,aAAO,MAAM;AACXC,QAAAA,aAAa,CAACH,QAAD,CAAb;AACD,OAFD;AAGD;AACF,GATQ,EASN,CAACN,OAAD,CATM,CAAT;AAWA,sBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,eAAP,CAAP;AACD;;AAED,eAAeL,WAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// const fadein = keyframes`\n//   from   { opacity:0; }\n//   to { opacity:1; }\n// `;\n\n// const fadeout = keyframes`\n//   from   { opacity:1; }\n//   to { opacity:0; }\n// `;\n\nconst fade = keyframes`\n  0% { opacity: 0; }\n  50% { opacity: 1; }\n  100% { opacity: 0; }\n`;\n\nconst Text = styled.h3`\n  text-align: center;\n  font-size: 1.7rem;\n  font-weight: 400;\n  letter-spacing: 1px;\n\n  animation: ${fade} 0.3s ease-in;\n`;\n\nfunction DynamicText({ playing, textArr }) {\n  const [textIdx, setTextIdx] = useState(0);\n  let textThatChanges = textArr[textIdx % textArr.length];\n\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 3000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [playing]);\n\n  return <Text>{textThatChanges}</Text>;\n}\n\nexport default DynamicText;\n\n// function DynamicText({ playing, textArr }) {\n//   const [textIdx, setTextIdx] = useState(0);\n//   let textThatChanges = textArr[textIdx % textArr.length];\n\n//   const [visible, setVisible] = useState(false);\n\n//   useEffect(() => {\n//     if (playing) {\n//       const interval = setInterval(() => {\n//         setTextIdx(index => index + 1);\n//       }, 3000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [playing]);\n\n//   return (\n//     <Text className={visible ? 'fadeIn' : 'fadeOut'}>{textThatChanges}</Text>\n//   );\n// }\n\n// export default DynamicText;\n"]},"metadata":{},"sourceType":"module"}