{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nconst fade = keyframes`\n  0%   { opacity:0; }\n  ${''\n/* 50%  { opacity:1; } */\n}\n  100% { opacity:1; }\n`;\nconst Text = styled.h3`\n  text-align: center;\n  font-size: 1.7rem;\n  font-weight: 400;\n  letter-spacing: 1px;\n\n  opacity: 0;\n  animation: ${props => props.playing && `${fade} 3s infinite`};\n`;\n\nfunction DynamicText({\n  playing,\n  textArr\n}) {\n  const [textIdx, setTextIdx] = useState(0);\n  let textThatChanges = textArr[textIdx % textArr.length];\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [playing]);\n  return /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, textThatChanges);\n}\n\nexport default DynamicText;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js"],"names":["React","useState","useEffect","styled","keyframes","fade","Text","h3","props","playing","DynamicText","textArr","textIdx","setTextIdx","textThatChanges","length","interval","setInterval","index","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAEA,MAAMC,IAAI,GAAGD,SAAU;;IAEnB;AAAG;AAA0B;;CAFjC;AAMA,MAAME,IAAI,GAAGH,MAAM,CAACI,EAAG;;;;;;;eAORC,KAAK,IAAIA,KAAK,CAACC,OAAN,IAAkB,GAAEJ,IAAK,cAAc;CAP/D;;AAUA,SAASK,WAAT,CAAqB;AAAED,EAAAA,OAAF;AAAWE,EAAAA;AAAX,CAArB,EAA2C;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAIa,eAAe,GAAGH,OAAO,CAACC,OAAO,GAAGD,OAAO,CAACI,MAAnB,CAA7B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAJ,EAAa;AACX,YAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCJ,QAAAA,UAAU,CAACK,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAV;AACD,OAF2B,EAEzB,IAFyB,CAA5B;AAGA,aAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;AACD;AACF,GAPQ,EAON,CAACP,OAAD,CAPM,CAAT;AASA,sBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOK,eAAP,CAAP;AACD;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst fade = keyframes`\n  0%   { opacity:0; }\n  ${'' /* 50%  { opacity:1; } */}\n  100% { opacity:1; }\n`;\n\nconst Text = styled.h3`\n  text-align: center;\n  font-size: 1.7rem;\n  font-weight: 400;\n  letter-spacing: 1px;\n\n  opacity: 0;\n  animation: ${props => props.playing && `${fade} 3s infinite`};\n`;\n\nfunction DynamicText({ playing, textArr }) {\n  const [textIdx, setTextIdx] = useState(0);\n  let textThatChanges = textArr[textIdx % textArr.length];\n\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [playing]);\n\n  return <Text>{textThatChanges}</Text>;\n}\n\nexport default DynamicText;\n"]},"metadata":{},"sourceType":"module"}