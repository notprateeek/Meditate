{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { fade } from '../../style/animation';\nimport { SmallTitle } from '../../style/style'; // const fade = keyframes`\n//   0% {\n//     opacity: 0;\n//   }\n//   50% {\n//     opacity: 1;\n//   }\n//   100% {\n//     opacity: 0;\n//   }\n// `;\n\nconst Text = styled(SmallTitle)`\n  opacity: 0;\n  animation: ${props => props.playing && css`\n      ${fade} 4s ease-in infinite\n    `};\n`;\n\nfunction DynamicText({\n  playing\n}) {\n  const [textIdx, setTextIdx] = useState(0);\n  const textArr = ['Breath in', 'Breath out', 'Just focus on yourself'];\n  let textThatChanges = textArr[textIdx % textArr.length];\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 4000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [playing]);\n  return /*#__PURE__*/React.createElement(Text, {\n    playing: playing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, textThatChanges);\n}\n\nexport default DynamicText;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js"],"names":["React","useState","useEffect","styled","keyframes","css","fade","SmallTitle","Text","props","playing","DynamicText","textIdx","setTextIdx","textArr","textThatChanges","length","interval","setInterval","index","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,mBAAvC;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAGL,MAAM,CAACI,UAAD,CAAa;;eAEjBE,KAAK,IAChBA,KAAK,CAACC,OAAN,IACAL,GAAI;QACAC,IAAK;KACP;CANN;;AASA,SAASK,WAAT,CAAqB;AAAED,EAAAA;AAAF,CAArB,EAAkC;AAChC,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AAEA,QAAMa,OAAO,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,wBAA5B,CAAhB;AACA,MAAIC,eAAe,GAAGD,OAAO,CAACF,OAAO,GAAGE,OAAO,CAACE,MAAnB,CAA7B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,OAAJ,EAAa;AACX,YAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCL,QAAAA,UAAU,CAACM,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAV;AACD,OAF2B,EAEzB,IAFyB,CAA5B;AAGA,aAAO,MAAM;AACXC,QAAAA,aAAa,CAACH,QAAD,CAAb;AACD,OAFD;AAGD;AACF,GATQ,EASN,CAACP,OAAD,CATM,CAAT;AAWA,sBAAO,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBK,eAAzB,CAAP;AACD;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\nimport { fade } from '../../style/animation';\nimport { SmallTitle } from '../../style/style';\n\n// const fade = keyframes`\n//   0% {\n//     opacity: 0;\n//   }\n//   50% {\n//     opacity: 1;\n//   }\n//   100% {\n//     opacity: 0;\n//   }\n// `;\n\nconst Text = styled(SmallTitle)`\n  opacity: 0;\n  animation: ${props =>\n    props.playing &&\n    css`\n      ${fade} 4s ease-in infinite\n    `};\n`;\n\nfunction DynamicText({ playing }) {\n  const [textIdx, setTextIdx] = useState(0);\n\n  const textArr = ['Breath in', 'Breath out', 'Just focus on yourself'];\n  let textThatChanges = textArr[textIdx % textArr.length];\n\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 4000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [playing]);\n\n  return <Text playing={playing}>{textThatChanges}</Text>;\n}\n\nexport default DynamicText;\n"]},"metadata":{},"sourceType":"module"}