{"ast":null,"code":"var _jsxFileName = \"/Volumes/TOSHIBA EXT/dev/metta/src/components/Button/TimerBtn.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nconst Select = styled.select`\n  position: absolute;\n  top: 5rem;\n  right: 0;\n`;\n\nfunction TimerBtn({\n  onClick\n}) {\n  const times = [{\n    duration: 240,\n    text: '4 min'\n  }, {\n    duration: 360,\n    text: '6 min'\n  }, {\n    duration: 480,\n    text: '8 min'\n  }];\n  return /*#__PURE__*/React.createElement(Select, {\n    onChange: e => onClick(+e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 240,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"4 min\"), /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: 360,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"6 min\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 480,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"8 min\"));\n}\n\nTimerBtn.propTypes = {\n  onClick: PropTypes.func\n}; // import React, { useState, useRef } from 'react';\n// import styled from 'styled-components';\n// import PropTypes from 'prop-types';\n// import useClickOutside from '../../hooks/useClickOutside';\n// const BtnContainer = styled.div`\n//   position: absolute;\n//   top: 5rem;\n//   right: 0;\n//   border-radius: 7px 0 0 7px;\n//   color: white;\n//   background: black;\n//   width: ${props => (props.isOpen ? '10rem' : '3rem')};\n//   height: 8rem;\n//   display: flex;\n//   justify-content: ${props => (props.isOpen ? 'flex-start' : 'center')};\n//   align-items: center;\n//   cursor: pointer;\n//   z-index: 3;\n//   @media (max-width: 320px) {\n//     top: 0;\n//   }\n// `;\n// const Span = styled.span`\n//   display: inline-block;\n//   transform: rotate(270deg);\n//   letter-spacing: 4px;\n//   font-size: 1.2rem;\n// `;\n// const SubBtn = styled.button`\n//   display: block;\n//   background: transparent;\n//   color: white;\n//   font-size: 1rem;\n//   font-weight: 700;\n//   text-align: left;\n//   cursor: pointer;\n//   margin: 5px;\n// `;\n// function TimerBtn({ onClick }) {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const ref = useRef();\n//   const times = [\n//     { duration: 240, text: '4 min' },\n//     { duration: 360, text: '6 min' },\n//     { duration: 480, text: '8 min' },\n//   ];\n//   const handleClick = e => {\n//     if (e.target.id !== 'timeBtn') setIsOpen(!isOpen);\n//   };\n//   useClickOutside(ref, () => {\n//     setIsOpen(false);\n//   });\n//   const buttons = times.map((t, i) => (\n//     <SubBtn id=\"timeBtn\" onClick={() => onClick(t.duration)} key={i}>\n//       {t.text}\n//     </SubBtn>\n//   ));\n//   return (\n//     <BtnContainer onClick={handleClick} isOpen={isOpen} ref={ref}>\n//       <Span>TIMER</Span>\n//       {isOpen && <div>{buttons}</div>}\n//     </BtnContainer>\n//   );\n// }\n// TimerBtn.propTypes = {\n//   onClick: PropTypes.func,\n// };\n\nexport default TimerBtn;","map":{"version":3,"sources":["/Volumes/TOSHIBA EXT/dev/metta/src/components/Button/TimerBtn.js"],"names":["React","useState","styled","PropTypes","Select","select","TimerBtn","onClick","times","duration","text","e","target","value","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,MAAO;;;;CAA7B;;AAMA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC7B,QAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GADY,EAEZ;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAFY,EAGZ;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAHY,CAAd;AAMA,sBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEC,CAAC,IAAIJ,OAAO,CAAC,CAACI,CAAC,CAACC,MAAF,CAASC,KAAX,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAQ,IAAA,KAAK,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAOE;AAAQ,IAAA,YAAY,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAQE;AAAQ,IAAA,KAAK,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF;AAYD;;AAEDP,QAAQ,CAACQ,SAAT,GAAqB;AACnBP,EAAAA,OAAO,EAAEJ,SAAS,CAACY;AADA,CAArB,C,CAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAeT,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Select = styled.select`\n  position: absolute;\n  top: 5rem;\n  right: 0;\n`;\n\nfunction TimerBtn({ onClick }) {\n  const times = [\n    { duration: 240, text: '4 min' },\n    { duration: 360, text: '6 min' },\n    { duration: 480, text: '8 min' },\n  ];\n\n  return (\n    <Select onChange={e => onClick(+e.target.value)}>\n      {/* {times.map((t, i) => (\n        <option value={t.duration} key={i}>\n          {t.text}\n        </option>\n      ))} */}\n      <option value={240}>4 min</option>\n      <option defaultValue={360}>6 min</option>\n      <option value={480}>8 min</option>\n    </Select>\n  );\n}\n\nTimerBtn.propTypes = {\n  onClick: PropTypes.func,\n};\n\n// import React, { useState, useRef } from 'react';\n// import styled from 'styled-components';\n// import PropTypes from 'prop-types';\n\n// import useClickOutside from '../../hooks/useClickOutside';\n\n// const BtnContainer = styled.div`\n//   position: absolute;\n//   top: 5rem;\n//   right: 0;\n//   border-radius: 7px 0 0 7px;\n//   color: white;\n//   background: black;\n//   width: ${props => (props.isOpen ? '10rem' : '3rem')};\n//   height: 8rem;\n//   display: flex;\n//   justify-content: ${props => (props.isOpen ? 'flex-start' : 'center')};\n//   align-items: center;\n//   cursor: pointer;\n//   z-index: 3;\n\n//   @media (max-width: 320px) {\n//     top: 0;\n//   }\n// `;\n\n// const Span = styled.span`\n//   display: inline-block;\n//   transform: rotate(270deg);\n//   letter-spacing: 4px;\n//   font-size: 1.2rem;\n// `;\n\n// const SubBtn = styled.button`\n//   display: block;\n//   background: transparent;\n//   color: white;\n//   font-size: 1rem;\n//   font-weight: 700;\n//   text-align: left;\n//   cursor: pointer;\n//   margin: 5px;\n// `;\n\n// function TimerBtn({ onClick }) {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const ref = useRef();\n\n//   const times = [\n//     { duration: 240, text: '4 min' },\n//     { duration: 360, text: '6 min' },\n//     { duration: 480, text: '8 min' },\n//   ];\n\n//   const handleClick = e => {\n//     if (e.target.id !== 'timeBtn') setIsOpen(!isOpen);\n//   };\n\n//   useClickOutside(ref, () => {\n//     setIsOpen(false);\n//   });\n\n//   const buttons = times.map((t, i) => (\n//     <SubBtn id=\"timeBtn\" onClick={() => onClick(t.duration)} key={i}>\n//       {t.text}\n//     </SubBtn>\n//   ));\n\n//   return (\n//     <BtnContainer onClick={handleClick} isOpen={isOpen} ref={ref}>\n//       <Span>TIMER</Span>\n//       {isOpen && <div>{buttons}</div>}\n//     </BtnContainer>\n//   );\n// }\n\n// TimerBtn.propTypes = {\n//   onClick: PropTypes.func,\n// };\n\nexport default TimerBtn;\n"]},"metadata":{},"sourceType":"module"}