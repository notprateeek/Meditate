{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/ProgressBar/ProgressBar.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlayerContainer, FigureIcon, SVGIcon, Timer } from '../../containers/Theme/ThemeStyles';\nimport MeditatorIcon from \"../../assets/figure-2.svg\";\n\nfunction ProgressBar({\n  duration,\n  currentTime\n}) {\n  const [length, setLength] = useState();\n  const circleRef = useRef();\n  console.log(currentTime);\n  const progress = length - currentTime / duration * length;\n  const elapsed = duration - currentTime;\n  const sec = Math.floor(elapsed % 60);\n  const min = Math.floor(elapsed / 60);\n  useEffect(() => {\n    const circleLength = circleRef.current.getTotalLength();\n    setLength(circleLength);\n  }, []);\n  const svgConfig = {\n    width: 453,\n    height: 453,\n    viewBox: '0 0 453 453',\n    fill: 'none',\n    xmlns: 'http://www.w3.org/2000/svg'\n  };\n  const circleConfig = {\n    cx: 226.5,\n    cy: 226.5,\n    r: 216.5,\n    strokeWidth: 20\n  };\n  return /*#__PURE__*/React.createElement(PlayerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FigureIcon, {\n    src: MeditatorIcon,\n    alt: \"meditator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SVGIcon, Object.assign({}, svgConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", Object.assign({}, circleConfig, {\n    stroke: \"#A0BDE6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(SVGIcon, Object.assign({}, svgConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", Object.assign({}, circleConfig, {\n    ref: circleRef,\n    stroke: \"#3680EA\",\n    transform: \"rotate(-90 226.5 226.5)\",\n    style: {\n      strokeDasharray: length,\n      strokeDashoffset: progress ? progress : length\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Timer, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, `${min}: ${sec}`));\n}\n\nProgressBar.propTypes = {\n  duration: PropTypes.number,\n  currentTime: PropTypes.number\n};\nexport default React.memo(ProgressBar);","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/ProgressBar/ProgressBar.js"],"names":["React","useRef","useEffect","useState","PropTypes","PlayerContainer","FigureIcon","SVGIcon","Timer","ProgressBar","duration","currentTime","length","setLength","circleRef","console","log","progress","elapsed","sec","Math","floor","min","circleLength","current","getTotalLength","svgConfig","width","height","viewBox","fill","xmlns","circleConfig","cx","cy","r","strokeWidth","MeditatorIcon","strokeDasharray","strokeDashoffset","propTypes","number","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,eADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,KAJF,QAKO,oCALP;;;AAQA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAArB,EAAgD;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAMW,SAAS,GAAGb,MAAM,EAAxB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEA,QAAMM,QAAQ,GAAGL,MAAM,GAAID,WAAW,GAAGD,QAAf,GAA2BE,MAArD;AACA,QAAMM,OAAO,GAAGR,QAAQ,GAAGC,WAA3B;AACA,QAAMQ,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,EAArB,CAAZ;AACA,QAAMI,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,EAArB,CAAZ;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,YAAY,GAAGT,SAAS,CAACU,OAAV,CAAkBC,cAAlB,EAArB;AACAZ,IAAAA,SAAS,CAACU,YAAD,CAAT;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMG,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE,GADS;AAEhBC,IAAAA,MAAM,EAAE,GAFQ;AAGhBC,IAAAA,OAAO,EAAE,aAHO;AAIhBC,IAAAA,IAAI,EAAE,MAJU;AAKhBC,IAAAA,KAAK,EAAE;AALS,GAAlB;AAQA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,EAAE,EAAE,KADe;AAEnBC,IAAAA,EAAE,EAAE,KAFe;AAGnBC,IAAAA,CAAC,EAAE,KAHgB;AAInBC,IAAAA,WAAW,EAAE;AAJM,GAArB;AAOA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEC,aAAjB;AAAgC,IAAA,GAAG,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,OAAD,oBAAaX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,gDAAYM,YAAZ;AAA0B,IAAA,MAAM,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAHF,eAME,oBAAC,OAAD,oBAAaN,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,gDACMM,YADN;AAEE,IAAA,GAAG,EAAElB,SAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,SAAS,EAAC,yBAJZ;AAKE,IAAA,KAAK,EAAE;AACLwB,MAAAA,eAAe,EAAE1B,MADZ;AAEL2B,MAAAA,gBAAgB,EAAEtB,QAAQ,GAAGA,QAAH,GAAcL;AAFnC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CANF,eAmBE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB,GAAEU,GAAI,KAAIH,GAAI,EAAjC,CAnBF,CADF;AAuBD;;AAEDV,WAAW,CAAC+B,SAAZ,GAAwB;AACtB9B,EAAAA,QAAQ,EAAEN,SAAS,CAACqC,MADE;AAEtB9B,EAAAA,WAAW,EAAEP,SAAS,CAACqC;AAFD,CAAxB;AAKA,eAAezC,KAAK,CAAC0C,IAAN,CAAWjC,WAAX,CAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  PlayerContainer,\n  FigureIcon,\n  SVGIcon,\n  Timer,\n} from '../../containers/Theme/ThemeStyles';\nimport MeditatorIcon from '../../assets/figure-2.svg';\n\nfunction ProgressBar({ duration, currentTime }) {\n  const [length, setLength] = useState();\n  const circleRef = useRef();\n  console.log(currentTime);\n\n  const progress = length - (currentTime / duration) * length;\n  const elapsed = duration - currentTime;\n  const sec = Math.floor(elapsed % 60);\n  const min = Math.floor(elapsed / 60);\n\n  useEffect(() => {\n    const circleLength = circleRef.current.getTotalLength();\n    setLength(circleLength);\n  }, []);\n\n  const svgConfig = {\n    width: 453,\n    height: 453,\n    viewBox: '0 0 453 453',\n    fill: 'none',\n    xmlns: 'http://www.w3.org/2000/svg',\n  };\n\n  const circleConfig = {\n    cx: 226.5,\n    cy: 226.5,\n    r: 216.5,\n    strokeWidth: 20,\n  };\n\n  return (\n    <PlayerContainer>\n      <FigureIcon src={MeditatorIcon} alt=\"meditator\" />\n\n      <SVGIcon {...svgConfig}>\n        <circle {...circleConfig} stroke=\"#A0BDE6\" />\n      </SVGIcon>\n      <SVGIcon {...svgConfig}>\n        <circle\n          {...circleConfig}\n          ref={circleRef}\n          stroke=\"#3680EA\"\n          transform=\"rotate(-90 226.5 226.5)\"\n          style={{\n            strokeDasharray: length,\n            strokeDashoffset: progress ? progress : length,\n          }}\n        />\n      </SVGIcon>\n\n      <Timer size=\"sm\">{`${min}: ${sec}`}</Timer>\n    </PlayerContainer>\n  );\n}\n\nProgressBar.propTypes = {\n  duration: PropTypes.number,\n  currentTime: PropTypes.number,\n};\n\nexport default React.memo(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}