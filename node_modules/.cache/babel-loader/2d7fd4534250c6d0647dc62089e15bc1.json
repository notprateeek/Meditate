{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container } from './themeStyles';\nimport { Title, FlexColDiv } from '../../style/style';\nimport ProgressBar from '../progressBar/progressBar';\nimport TimerBtn from '../button/TimerBtn';\nimport Player from '../../hooks/useAudio';\n\nfunction Theme(props) {\n  const {\n    url\n  } = props;\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({\n    min: 600,\n    sec: 0\n  });\n  const {\n    min,\n    sec\n  } = duration;\n  console.log(min + sec);\n  const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n  const handleClick = time => {\n    setDuration({\n      min: time,\n      sec: 0\n    });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  const updateTime = () => {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59\n        });\n      } else {\n        setDuration({ ...duration,\n          sec: sec - 1\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \" No one save us but ourselves \"), \" \", /*#__PURE__*/React.createElement(ProgressBar, {\n    duration: duration,\n    displayTime: displayTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 64\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FlexColDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    url: url,\n    setStart: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }), \" \", /*#__PURE__*/React.createElement(TimerBtn, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }), \" \"), \" \", props.children, \" \");\n} // function Theme(props) {\n//   const { url } = props;\n//   const [start, setStart] = useState(false);\n//   const [duration, setDuration] = useState({ min: 600, sec: 0 });\n//   const { min, sec } = duration;\n//   const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n//   const handleClick = time => {\n//     setDuration({ min: time, sec: 0 });\n//   };\n//   const handleToggle = () => {\n//     setStart(!start);\n//   };\n//   const updateTime = () => {\n//     if (start) {\n//       if (sec === 0) {\n//         setDuration({\n//           min: min - 1,\n//           sec: 59,\n//         });\n//       } else {\n//         setDuration({ ...duration, sec: sec - 1 });\n//       }\n//     }\n//   };\n//   useEffect(() => {\n//     if (start) {\n//       const token = setTimeout(updateTime, 1000);\n//       return function cleanUp() {\n//         clearTimeout(token);\n//       };\n//     }\n//   });\n//   return (\n//     <Container>\n//       <Title size=\"md\">No one save us but ourselves</Title>\n//       <ProgressBar duration={duration} displayTime={displayTime} />\n//       <FlexColDiv>\n//         <Player url={url} setStart={handleToggle} />\n//         <TimerBtn onClick={handleClick} />\n//       </FlexColDiv>\n//       {props.children}\n//     </Container>\n//   );\n// }\n\n\nexport default Theme;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js"],"names":["React","useState","useEffect","Container","Title","FlexColDiv","ProgressBar","TimerBtn","Player","Theme","props","url","start","setStart","duration","setDuration","min","sec","console","log","displayTime","Math","floor","handleClick","time","handleToggle","updateTime","token","setTimeout","cleanUp","clearTimeout","children"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  Container\n} from './themeStyles';\nimport {\n  Title,\n  FlexColDiv\n} from '../../style/style';\nimport ProgressBar from '../progressBar/progressBar';\nimport TimerBtn from '../button/TimerBtn';\nimport Player from '../../hooks/useAudio';\n\nfunction Theme(props) {\n  const {\n    url\n  } = props;\n\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({\n    min: 600,\n    sec: 0\n  });\n  const {\n    min,\n    sec\n  } = duration;\n  console.log(min + sec)\n\n  const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n  const handleClick = time => {\n    setDuration({\n      min: time,\n      sec: 0\n    });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  const updateTime = () => {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59,\n        });\n      } else {\n        setDuration({\n          ...duration,\n          sec: sec - 1\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  return ( <\n    Container >\n    <\n    Title size = \"md\" > No one save us but ourselves < /Title> <\n    ProgressBar duration = {\n      duration\n    }\n    displayTime = {\n      displayTime\n    }\n    /> <\n    FlexColDiv >\n    <\n    Player url = {\n      url\n    }\n    setStart = {\n      handleToggle\n    }\n    /> <\n    TimerBtn onClick = {\n      handleClick\n    }\n    /> <\n    /FlexColDiv> {\n      props.children\n    } <\n    /Container>\n  );\n}\n\n// function Theme(props) {\n//   const { url } = props;\n\n//   const [start, setStart] = useState(false);\n//   const [duration, setDuration] = useState({ min: 600, sec: 0 });\n//   const { min, sec } = duration;\n\n//   const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n//   const handleClick = time => {\n//     setDuration({ min: time, sec: 0 });\n//   };\n\n//   const handleToggle = () => {\n//     setStart(!start);\n//   };\n\n//   const updateTime = () => {\n//     if (start) {\n//       if (sec === 0) {\n//         setDuration({\n//           min: min - 1,\n//           sec: 59,\n//         });\n//       } else {\n//         setDuration({ ...duration, sec: sec - 1 });\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (start) {\n//       const token = setTimeout(updateTime, 1000);\n\n//       return function cleanUp() {\n//         clearTimeout(token);\n//       };\n//     }\n//   });\n\n//   return (\n//     <Container>\n//       <Title size=\"md\">No one save us but ourselves</Title>\n//       <ProgressBar duration={duration} displayTime={displayTime} />\n//       <FlexColDiv>\n//         <Player url={url} setStart={handleToggle} />\n//         <TimerBtn onClick={handleClick} />\n//       </FlexColDiv>\n//       {props.children}\n//     </Container>\n//   );\n// }\n\nexport default Theme;"]},"metadata":{},"sourceType":"module"}