{"ast":null,"code":"import _slicedToArray from\"/Volumes/TOSHIBA EXT/dev/metta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from'react';import{PlayerContainer,FigureIcon,SVGIcon,Timer}from'containers/Theme/ThemeStyles';import MeditatorIcon from\"assets/figure-2.svg\";function ProgressBar(_ref){var duration=_ref.duration,currentTime=_ref.currentTime,playing=_ref.playing,theme=_ref.theme;var _useState=useState(),_useState2=_slicedToArray(_useState,2),length=_useState2[0],setLength=_useState2[1];var circleRef=useRef();var progress=length-currentTime/duration*length;var elapsed=duration-currentTime;var sec=Math.floor(elapsed%60);var min=Math.floor(elapsed/60);useEffect(function(){var circleLength=circleRef.current.getTotalLength();setLength(circleLength);},[]);var svgConfig={width:453,height:453,viewBox:'0 0 453 453',fill:'none',xmlns:'http://www.w3.org/2000/svg'};var circleConfig={cx:226.5,cy:226.5,r:216.5,strokeWidth:20};var progressColor;var strokeColor;var color={ocean:{progress:'#ffffff',stroke:'#122536'},mountain:{progress:'#ffffff',stroke:'#141A1C'},rain:{progress:'#ffffff',stroke:'#342C3C'}};switch(theme){case'ocean':progressColor=color.ocean.progress;strokeColor=color.ocean.stroke;break;case'mountain':progressColor=color.mountain.progress;strokeColor=color.mountain.stroke;break;case'rain':progressColor=color.rain.progress;strokeColor=color.rain.stroke;break;default:break;}return/*#__PURE__*/React.createElement(PlayerContainer,null,/*#__PURE__*/React.createElement(FigureIcon,{src:MeditatorIcon,alt:\"meditator\",playing:playing}),/*#__PURE__*/React.createElement(SVGIcon,svgConfig,/*#__PURE__*/React.createElement(\"circle\",Object.assign({},circleConfig,{stroke:progressColor}))),/*#__PURE__*/React.createElement(SVGIcon,svgConfig,/*#__PURE__*/React.createElement(\"circle\",Object.assign({},circleConfig,{ref:circleRef,stroke:strokeColor,transform:\"rotate(-90 226.5 226.5)\",style:{strokeDasharray:length,strokeDashoffset:progress?progress:length}}))),/*#__PURE__*/React.createElement(Timer,{size:\"sm\"},\"\".concat(min,\": \").concat(sec)));}export default React.memo(ProgressBar);","map":{"version":3,"sources":["/Volumes/TOSHIBA EXT/dev/metta/src/components/ProgressBar/ProgressBar.js"],"names":["React","useRef","useEffect","useState","PlayerContainer","FigureIcon","SVGIcon","Timer","ProgressBar","duration","currentTime","playing","theme","length","setLength","circleRef","progress","elapsed","sec","Math","floor","min","circleLength","current","getTotalLength","svgConfig","width","height","viewBox","fill","xmlns","circleConfig","cx","cy","r","strokeWidth","progressColor","strokeColor","color","ocean","stroke","mountain","rain","MeditatorIcon","strokeDasharray","strokeDashoffset","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  PlayerContainer,\n  FigureIcon,\n  SVGIcon,\n  Timer,\n} from 'containers/Theme/ThemeStyles';\nimport MeditatorIcon from 'assets/figure-2.svg';\n\nfunction ProgressBar({ duration, currentTime, playing, theme }) {\n  const [length, setLength] = useState();\n  const circleRef = useRef();\n\n  const progress = length - (currentTime / duration) * length;\n  const elapsed = duration - currentTime;\n  const sec = Math.floor(elapsed % 60);\n  const min = Math.floor(elapsed / 60);\n\n  useEffect(() => {\n    const circleLength = circleRef.current.getTotalLength();\n    setLength(circleLength);\n  }, []);\n\n  const svgConfig = {\n    width: 453,\n    height: 453,\n    viewBox: '0 0 453 453',\n    fill: 'none',\n    xmlns: 'http://www.w3.org/2000/svg',\n  };\n\n  const circleConfig = {\n    cx: 226.5,\n    cy: 226.5,\n    r: 216.5,\n    strokeWidth: 20,\n  };\n\n  let progressColor;\n  let strokeColor;\n  const color = {\n    ocean: { progress: '#ffffff', stroke: '#122536' },\n    mountain: { progress: '#ffffff', stroke: '#141A1C' },\n    rain: { progress: '#ffffff', stroke: '#342C3C' },\n  };\n\n  switch (theme) {\n    case 'ocean':\n      progressColor = color.ocean.progress;\n      strokeColor = color.ocean.stroke;\n      break;\n    case 'mountain':\n      progressColor = color.mountain.progress;\n      strokeColor = color.mountain.stroke;\n      break;\n    case 'rain':\n      progressColor = color.rain.progress;\n      strokeColor = color.rain.stroke;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <PlayerContainer>\n      <FigureIcon src={MeditatorIcon} alt=\"meditator\" playing={playing} />\n      <SVGIcon {...svgConfig}>\n        <circle {...circleConfig} stroke={progressColor} />\n      </SVGIcon>\n      <SVGIcon {...svgConfig}>\n        <circle\n          {...circleConfig}\n          ref={circleRef}\n          stroke={strokeColor}\n          transform=\"rotate(-90 226.5 226.5)\"\n          style={{\n            strokeDasharray: length,\n            strokeDashoffset: progress ? progress : length,\n          }}\n        />\n      </SVGIcon>\n      <Timer size=\"sm\">{`${min}: ${sec}`}</Timer>\n    </PlayerContainer>\n  );\n}\n\nProgressBar.propTypes = {\n  duration: PropTypes.number,\n  currentTime: PropTypes.number,\n  playing: PropTypes.bool,\n  theme: PropTypes.string,\n};\n\nexport default React.memo(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}