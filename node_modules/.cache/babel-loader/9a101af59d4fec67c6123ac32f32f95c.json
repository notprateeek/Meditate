{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Timer } from './themeStyles';\nimport { Title, FlexColDiv } from '../../style/style';\nimport Player from '../../hooks/useAudio';\nimport ProgressBar from '../progressBar/progressBar';\nimport CircleProgressBarBase from '../circleProgressBar/CircleProgressBarBase';\n\nfunction Theme(props) {\n  const {\n    url\n  } = props;\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({\n    min: 600,\n    sec: 0\n  });\n  const {\n    min,\n    sec\n  } = duration;\n  const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n  const handleClick = time => {\n    setDuration({\n      min: time,\n      sec: 0\n    });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  const updateTime = () => {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59\n        });\n      } else {\n        setDuration({ ...duration,\n          sec: sec - 1\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"No one save us but ourselves\"), /*#__PURE__*/React.createElement(CircleProgressBarBase, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlexColDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, displayTime), /*#__PURE__*/React.createElement(Player, {\n    url: url,\n    setStart: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleClick(300),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"5 min\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleClick(600),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"10 min\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleClick(900),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"15 min\")), props.children);\n}\n\nexport default Theme;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js"],"names":["React","useState","useEffect","Container","Timer","Title","FlexColDiv","Player","ProgressBar","CircleProgressBarBase","Theme","props","url","start","setStart","duration","setDuration","min","sec","displayTime","Math","floor","handleClick","time","handleToggle","updateTime","token","setTimeout","cleanUp","clearTimeout","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Container, Timer } from './themeStyles';\nimport { Title, FlexColDiv } from '../../style/style';\nimport Player from '../../hooks/useAudio';\nimport ProgressBar from '../progressBar/progressBar';\n\nimport CircleProgressBarBase from '../circleProgressBar/CircleProgressBarBase';\n\nfunction Theme(props) {\n  const { url } = props;\n\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({ min: 600, sec: 0 });\n  const { min, sec } = duration;\n\n  const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n  const handleClick = time => {\n    setDuration({ min: time, sec: 0 });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  const updateTime = () => {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59,\n        });\n      } else {\n        setDuration({ ...duration, sec: sec - 1 });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  return (\n    <Container>\n      <Title size=\"md\">No one save us but ourselves</Title>\n      {/* <ProgressBar duration={duration} /> */}\n      <CircleProgressBarBase />\n\n      <FlexColDiv>\n        <Timer size=\"sm\">{displayTime}</Timer>\n        <Player url={url} setStart={handleToggle} />\n\n        <button onClick={() => handleClick(300)}>5 min</button>\n        <button onClick={() => handleClick(600)}>10 min</button>\n        <button onClick={() => handleClick(900)}>15 min</button>\n      </FlexColDiv>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default Theme;\n"]},"metadata":{},"sourceType":"module"}