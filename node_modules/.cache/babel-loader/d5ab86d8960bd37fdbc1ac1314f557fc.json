{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/hooks/useAudio.js\";\nimport React, { useState, useEffect } from 'react';\nimport PlayBtn from '../components/button/playBtn'; // const useAudio = url => {\n//   const [audio] = useState(new Audio(url));\n//   const [playing, setPlaying] = useState(false);\n//   // Stop music when time is over\n//   console.log(600 - audio.currentTime);\n//   // audio.ontimeupdate = () => {\n//   //   let currentTime = audio.currentTime;\n//   //   let elapsed = duration - currentTime;\n//   //   let seconds = Math.floor(elapsed % 60);\n//   //   let minutes = Math.floor(elapsed / 60);\n//   //   let progress = outlineLength - (currentTime / duration) * outlineLength;\n//   //   DOMstring.outline.style.strokeDashoffset = progress;\n//   // }\n//   const toggle = () => setPlaying(!playing);\n//   useEffect(() => {\n//     playing ? audio.play() : audio.pause();\n//   }, [playing, audio]);\n//   useEffect(() => {\n//     audio.addEventListener('ended', () => setPlaying(false));\n//     return () => {\n//       audio.removeEventListener('ended', () => setPlaying(false));\n//     };\n//   }, [audio]);\n//   return [playing, toggle];\n// };\n\nconst Player = ({\n  url,\n  setStart,\n  setCurrentTime\n}) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    // playing ? audio.play() : audio.pause();\n    if (playing) {\n      setCurrentTime(audio.currentTime);\n      console.log(audio.currentTime);\n      audio.play();\n    } else {\n      audio.pause();\n    }\n\n    setCurrentTime(audio.currentTime);\n  }, [playing, audio]);\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n\n  const handleClick = () => {\n    toggle();\n    setStart();\n  };\n\n  return /*#__PURE__*/React.createElement(PlayBtn, {\n    onClick: handleClick,\n    playing: playing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Player; // const useAudio = url => {\n//   const [audio] = useState(new Audio(url));\n//   const [playing, setPlaying] = useState(false);\n//   const toggle = () => setPlaying(!playing);\n//   useEffect(() => {\n//     playing ? audio.play() : audio.pause();\n//   }, [playing, audio]);\n//   useEffect(() => {\n//     audio.addEventListener('ended', () => setPlaying(false));\n//     return () => {\n//       audio.removeEventListener('ended', () => setPlaying(false));\n//     };\n//   }, [audio]);\n//   return [playing, toggle];\n// };\n// const Player = ({ url, setStart }) => {\n//   const [playing, toggle] = useAudio(url);\n//   const handleClick = () => {\n//     toggle();\n//     setStart();\n//   };\n//   // return <PlayBtn onClick={toggle} playing={playing} />;\n//   return <PlayBtn onClick={handleClick} playing={playing} />;\n// };\n// export default Player;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/hooks/useAudio.js"],"names":["React","useState","useEffect","PlayBtn","Player","url","setStart","setCurrentTime","audio","Audio","playing","setPlaying","toggle","currentTime","console","log","play","pause","addEventListener","removeEventListener","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,8BAApB,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAAuC;AACpD,QAAM,CAACC,KAAD,IAAUP,QAAQ,CAAC,IAAIQ,KAAJ,CAAUJ,GAAV,CAAD,CAAxB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMW,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIQ,OAAJ,EAAa;AACXH,MAAAA,cAAc,CAACC,KAAK,CAACK,WAAP,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACK,WAAlB;AACAL,MAAAA,KAAK,CAACQ,IAAN;AACD,KAJD,MAIO;AACLR,MAAAA,KAAK,CAACS,KAAN;AACD;;AACDV,IAAAA,cAAc,CAACC,KAAK,CAACK,WAAP,CAAd;AACD,GAVQ,EAUN,CAACH,OAAD,EAAUF,KAAV,CAVM,CAAT;AAYAN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACU,gBAAN,CAAuB,OAAvB,EAAgC,MAAMP,UAAU,CAAC,KAAD,CAAhD;AACA,WAAO,MAAM;AACXH,MAAAA,KAAK,CAACW,mBAAN,CAA0B,OAA1B,EAAmC,MAAMR,UAAU,CAAC,KAAD,CAAnD;AACD,KAFD;AAGD,GALQ,EAKN,CAACH,KAAD,CALM,CAAT;;AAOA,QAAMY,WAAW,GAAG,MAAM;AACxBR,IAAAA,MAAM;AACNN,IAAAA,QAAQ;AACT,GAHD;;AAKA,sBAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEc,WAAlB;AAA+B,IAAA,OAAO,EAAEV,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA/BD;;AAiCA,eAAeN,MAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PlayBtn from '../components/button/playBtn';\n\n// const useAudio = url => {\n//   const [audio] = useState(new Audio(url));\n//   const [playing, setPlaying] = useState(false);\n\n//   // Stop music when time is over\n//   console.log(600 - audio.currentTime);\n\n//   // audio.ontimeupdate = () => {\n//   //   let currentTime = audio.currentTime;\n//   //   let elapsed = duration - currentTime;\n\n//   //   let seconds = Math.floor(elapsed % 60);\n//   //   let minutes = Math.floor(elapsed / 60);\n\n//   //   let progress = outlineLength - (currentTime / duration) * outlineLength;\n//   //   DOMstring.outline.style.strokeDashoffset = progress;\n//   // }\n\n//   const toggle = () => setPlaying(!playing);\n\n//   useEffect(() => {\n//     playing ? audio.play() : audio.pause();\n//   }, [playing, audio]);\n\n//   useEffect(() => {\n//     audio.addEventListener('ended', () => setPlaying(false));\n//     return () => {\n//       audio.removeEventListener('ended', () => setPlaying(false));\n//     };\n//   }, [audio]);\n\n//   return [playing, toggle];\n// };\n\nconst Player = ({ url, setStart, setCurrentTime }) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    // playing ? audio.play() : audio.pause();\n    if (playing) {\n      setCurrentTime(audio.currentTime);\n      console.log(audio.currentTime);\n      audio.play();\n    } else {\n      audio.pause();\n    }\n    setCurrentTime(audio.currentTime);\n  }, [playing, audio]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n\n  const handleClick = () => {\n    toggle();\n    setStart();\n  };\n\n  return <PlayBtn onClick={handleClick} playing={playing} />;\n};\n\nexport default Player;\n\n// const useAudio = url => {\n//   const [audio] = useState(new Audio(url));\n//   const [playing, setPlaying] = useState(false);\n\n//   const toggle = () => setPlaying(!playing);\n\n//   useEffect(() => {\n//     playing ? audio.play() : audio.pause();\n//   }, [playing, audio]);\n\n//   useEffect(() => {\n//     audio.addEventListener('ended', () => setPlaying(false));\n//     return () => {\n//       audio.removeEventListener('ended', () => setPlaying(false));\n//     };\n//   }, [audio]);\n\n//   return [playing, toggle];\n// };\n\n// const Player = ({ url, setStart }) => {\n//   const [playing, toggle] = useAudio(url);\n\n//   const handleClick = () => {\n//     toggle();\n//     setStart();\n//   };\n\n//   // return <PlayBtn onClick={toggle} playing={playing} />;\n//   return <PlayBtn onClick={handleClick} playing={playing} />;\n// };\n\n// export default Player;\n"]},"metadata":{},"sourceType":"module"}