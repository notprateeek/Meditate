{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/containers/Theme/Theme.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container } from './ThemeStyles';\nimport { Title } from '../../style/style';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport TimerBtn from '../../components/Button/TimerBtn';\nimport PlayBtn from '../../components/Button/PlayBtn';\n\nfunction Theme(props) {\n  const {\n    url\n  } = props;\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  const [duration, setDuration] = useState(3);\n  const [currentTime, setCurrentTime] = useState(0); // Play audio\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio]);\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]); //Update duration\n\n  useEffect(() => {\n    if (currentTime >= duration) return;\n\n    if (playing) {\n      const token = setTimeout(updateTime, 1000); // return function cleanUp() {\n      //   clearTimeout(token);\n      // };\n    }\n  });\n\n  const handleClick = time => setDuration(time);\n\n  const handleToggle = () => setPlaying(!playing);\n\n  const updateTime = () => {\n    if (playing) setDuration(duration - 1);\n  };\n\n  audio.ontimeupdate = () => {\n    setCurrentTime(audio.currentTime);\n\n    if (currentTime >= duration) {\n      audio.pause();\n      audio.currentTime = 0;\n      setPlaying(false);\n    }\n  }; // if (currentTime > duration) {\n  //   return <Redirect to=\"/congraturation\" />;\n  // }\n  // return (\n  //   <Container>\n  //     <Title size=\"md\">No one save us but ourselves</Title>\n  //     <ProgressBar\n  //       playing={playing}\n  //       duration={duration}\n  //       currentTime={Math.floor(currentTime)}\n  //     />\n  //     <PlayBtn playing={playing} onClick={handleToggle} />\n  //     <TimerBtn onClick={handleClick} />\n  //     {props.children}\n  //   </Container>\n  // );\n\n\n  let theme;\n\n  if (currentTime > duration) {\n    theme = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/congraturation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    });\n  } else {\n    theme = /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"No one save us but ourselves\"), /*#__PURE__*/React.createElement(ProgressBar, {\n      playing: playing,\n      duration: duration,\n      currentTime: Math.floor(currentTime),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PlayBtn, {\n      playing: playing,\n      onClick: handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TimerBtn, {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), props.children);\n  }\n\n  return theme;\n}\n\nexport default React.memo(Theme);","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/containers/Theme/Theme.js"],"names":["React","useState","useEffect","Redirect","Container","Title","ProgressBar","TimerBtn","PlayBtn","Theme","props","url","audio","Audio","playing","setPlaying","duration","setDuration","currentTime","setCurrentTime","play","pause","addEventListener","removeEventListener","token","setTimeout","updateTime","handleClick","time","handleToggle","ontimeupdate","theme","Math","floor","children","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Container } from './ThemeStyles';\nimport { Title } from '../../style/style';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport TimerBtn from '../../components/Button/TimerBtn';\nimport PlayBtn from '../../components/Button/PlayBtn';\n\nfunction Theme(props) {\n  const { url } = props;\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  const [duration, setDuration] = useState(3);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  // Play audio\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n\n  //Update duration\n  useEffect(() => {\n    if (currentTime >= duration) return;\n    if (playing) {\n      const token = setTimeout(updateTime, 1000);\n\n      // return function cleanUp() {\n      //   clearTimeout(token);\n      // };\n    }\n  });\n\n  const handleClick = time => setDuration(time);\n  const handleToggle = () => setPlaying(!playing);\n  const updateTime = () => {\n    if (playing) setDuration(duration - 1);\n  };\n\n  audio.ontimeupdate = () => {\n    setCurrentTime(audio.currentTime);\n\n    if (currentTime >= duration) {\n      audio.pause();\n      audio.currentTime = 0;\n      setPlaying(false);\n    }\n  };\n\n  // if (currentTime > duration) {\n  //   return <Redirect to=\"/congraturation\" />;\n  // }\n\n  // return (\n  //   <Container>\n  //     <Title size=\"md\">No one save us but ourselves</Title>\n  //     <ProgressBar\n  //       playing={playing}\n  //       duration={duration}\n  //       currentTime={Math.floor(currentTime)}\n  //     />\n  //     <PlayBtn playing={playing} onClick={handleToggle} />\n  //     <TimerBtn onClick={handleClick} />\n  //     {props.children}\n  //   </Container>\n  // );\n\n  let theme;\n\n  if (currentTime > duration) {\n    theme = <Redirect to=\"/congraturation\" />;\n  } else {\n    theme = (\n      <Container>\n        <Title size=\"md\">No one save us but ourselves</Title>\n        <ProgressBar\n          playing={playing}\n          duration={duration}\n          currentTime={Math.floor(currentTime)}\n        />\n        <PlayBtn playing={playing} onClick={handleToggle} />\n        <TimerBtn onClick={handleClick} />\n        {props.children}\n      </Container>\n    );\n  }\n\n  return theme;\n}\n\nexport default React.memo(Theme);\n"]},"metadata":{},"sourceType":"module"}