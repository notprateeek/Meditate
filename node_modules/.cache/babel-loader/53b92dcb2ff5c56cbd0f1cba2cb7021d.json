{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/Button/TimerBtn.js\";\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useClickOutside from '../../hooks/useClickOutside';\nconst BtnContainer = styled.div`\n  position: absolute;\n  top: 5rem;\n  right: 0;\n  border-radius: 7px 0 0 7px;\n  color: white;\n  background: black;\n  width: ${props => props.isOpen ? '10rem' : '3rem'};\n  height: 8rem;\n  display: flex;\n  justify-content: ${props => props.isOpen ? 'flex-start' : 'center'};\n  align-items: center;\n  cursor: pointer;\n`;\nconst Span = styled.span`\n  display: inline-block;\n  transform: rotate(270deg);\n  letter-spacing: 4px;\n  font-size: 1.2rem;\n`;\nconst SubBtn = styled.button`\n  display: block;\n  background: transparent;\n  color: white;\n  font-size: 1rem;\n  font-weight: 700;\n  text-align: left;\n  cursor: pointer;\n  margin: 5px;\n`;\n\nfunction TimerBtn({\n  onClick\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef();\n  const times = [{\n    duration: 300,\n    text: '5 min'\n  }, {\n    duration: 600,\n    text: '10 min'\n  }, {\n    duration: 900,\n    text: '15 min'\n  }];\n\n  const handleClick = e => {\n    if (e.target.id !== 'timeBtn') setIsOpen(!isOpen);\n  };\n\n  useClickOutside(ref, () => {\n    setIsOpen(false);\n  });\n  const buttons = times.map((t, i) => /*#__PURE__*/React.createElement(SubBtn, {\n    id: \"timeBtn\",\n    onClick: () => onClick(t.duration),\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, \" \", t.text, \" \"));\n  return /*#__PURE__*/React.createElement(BtnContainer, {\n    onClick: handleClick,\n    isOpen: isOpen,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Span, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \" TIMER \"), \" \", isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \" \", buttons, \" \"), \" \");\n}\n\nTimerBtn.propTypes = {\n  onClick: PropTypes.func\n};\nexport default TimerBtn;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/Button/TimerBtn.js"],"names":["React","useState","useRef","styled","PropTypes","useClickOutside","BtnContainer","div","props","isOpen","Span","span","SubBtn","button","TimerBtn","onClick","setIsOpen","ref","times","duration","text","handleClick","e","target","id","buttons","map","t","i","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,MAFF,QAGO,OAHP;AAIA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAK;;;;;;;WAOtBC,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,OAAf,GAAyB,MAAQ;;;qBAGjCD,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,YAAf,GAA8B,QAAU;;;CAVvE;AAeA,MAAMC,IAAI,GAAGP,MAAM,CAACQ,IAAM;;;;;CAA1B;AAOA,MAAMC,MAAM,GAAGT,MAAM,CAACU,MAAQ;;;;;;;;;CAA9B;;AAWA,SAASC,QAAT,CAAkB;AAChBC,EAAAA;AADgB,CAAlB,EAEG;AACD,QAAM,CAACN,MAAD,EAASO,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMgB,GAAG,GAAGf,MAAM,EAAlB;AAEA,QAAMgB,KAAK,GAAG,CAAC;AACXC,IAAAA,QAAQ,EAAE,GADC;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAD,EAIZ;AACED,IAAAA,QAAQ,EAAE,GADZ;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAJY,EAQZ;AACED,IAAAA,QAAQ,EAAE,GADZ;AAEEC,IAAAA,IAAI,EAAE;AAFR,GARY,CAAd;;AAcA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,SAApB,EAA+BR,SAAS,CAAC,CAACP,MAAF,CAAT;AAChC,GAFD;;AAIAJ,EAAAA,eAAe,CAACY,GAAD,EAAM,MAAM;AACzBD,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFc,CAAf;AAIA,QAAMS,OAAO,GAAGP,KAAK,CAACQ,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBAAY,oBACpC,MADoC;AAC7B,IAAA,EAAE,EAAG,SADwB;AAEpC,IAAA,OAAO,EACL,MAAMb,OAAO,CAACY,CAAC,CAACR,QAAH,CAHqB;AAKpC,IAAA,GAAG,EACDS,CANkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQlCD,CAAC,CAACP,IARgC,MAAtB,CAAhB;AAaA,sBAAS,oBACP,YADO;AACM,IAAA,OAAO,EAClBC,WAFK;AAIP,IAAA,MAAM,EACJZ,MALK;AAOP,IAAA,GAAG,EACDQ,GARK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUP,oBACA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVO,OAYLR,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACNgB,OADM,MAZL,MAAT;AAiBC;;AAEDX,QAAQ,CAACe,SAAT,GAAqB;AACnBd,EAAAA,OAAO,EAAEX,SAAS,CAAC0B;AADA,CAArB;AAIA,eAAehB,QAAf","sourcesContent":["import React, {\n  useState,\n  useRef\n} from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport useClickOutside from '../../hooks/useClickOutside';\n\nconst BtnContainer = styled.div `\n  position: absolute;\n  top: 5rem;\n  right: 0;\n  border-radius: 7px 0 0 7px;\n  color: white;\n  background: black;\n  width: ${props => (props.isOpen ? '10rem' : '3rem')};\n  height: 8rem;\n  display: flex;\n  justify-content: ${props => (props.isOpen ? 'flex-start' : 'center')};\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst Span = styled.span `\n  display: inline-block;\n  transform: rotate(270deg);\n  letter-spacing: 4px;\n  font-size: 1.2rem;\n`;\n\nconst SubBtn = styled.button `\n  display: block;\n  background: transparent;\n  color: white;\n  font-size: 1rem;\n  font-weight: 700;\n  text-align: left;\n  cursor: pointer;\n  margin: 5px;\n`;\n\nfunction TimerBtn({\n  onClick\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef();\n\n  const times = [{\n      duration: 300,\n      text: '5 min'\n    },\n    {\n      duration: 600,\n      text: '10 min'\n    },\n    {\n      duration: 900,\n      text: '15 min'\n    },\n  ];\n\n  const handleClick = e => {\n    if (e.target.id !== 'timeBtn') setIsOpen(!isOpen);\n  };\n\n  useClickOutside(ref, () => {\n    setIsOpen(false);\n  });\n\n  const buttons = times.map((t, i) => ( <\n    SubBtn id = \"timeBtn\"\n    onClick = {\n      () => onClick(t.duration)\n    }\n    key = {\n      i\n    } > {\n      t.text\n    } <\n    /SubBtn>\n  ));\n\n  return ( <\n    BtnContainer onClick = {\n      handleClick\n    }\n    isOpen = {\n      isOpen\n    }\n    ref = {\n      ref\n    } >\n    <\n    Span > TIMER < /Span> {\n      isOpen && < div > {\n          buttons\n        } < /div>} <\n        /BtnContainer>\n    );\n  }\n\n  TimerBtn.propTypes = {\n    onClick: PropTypes.func,\n  };\n\n  export default TimerBtn;"]},"metadata":{},"sourceType":"module"}