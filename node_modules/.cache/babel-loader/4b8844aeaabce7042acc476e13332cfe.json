{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components'; // const fadein = keyframes`\n//   from   { opacity:0; }\n//   to { opacity:1; }\n// `;\n// const fadeout = keyframes`\n//   from   { opacity:1; }\n//   to { opacity:0; }\n// `;\n// const stateToAnimation = {\n//   NO_SLIDE: 'none',\n//   SLIDE_OUT: fadein + ' forwards',\n//   SLIDE_IN: fadeout,\n// }\n\nconst Text = styled.h3`\n  text-align: center;\n  font-size: 1.7rem;\n  font-weight: 400;\n  letter-spacing: 1px;\n\n  ${''\n/* opacity: 0;\nanimation: ${props => props.playing && `${fade} 3s infinite`}; */\n}\n\n  .fadeOut {\n    opacity: 0;\n    transition: opacity 3s;\n  }\n  .fadeIn {\n    opacity: 1;\n    transition: opacity 3s;\n  }\n`;\n\nfunction DynamicText({\n  playing,\n  textArr\n}) {\n  const [textIdx, setTextIdx] = useState(0);\n  let textThatChanges = textArr[textIdx % textArr.length];\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [playing]);\n  return /*#__PURE__*/React.createElement(Text, {\n    className: visible ? 'fadeIn' : 'fadeOut',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, textThatChanges);\n}\n\nexport default DynamicText;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/DynamicText/DynamicText.js"],"names":["React","useState","useEffect","styled","keyframes","Text","h3","DynamicText","playing","textArr","textIdx","setTextIdx","textThatChanges","length","visible","setVisible","interval","setInterval","index","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,EAAG;;;;;;IAMnB;AAAG;;AAC6D;;;;;;;;;;CAPpE;;AAmBA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAArB,EAA2C;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAIW,eAAe,GAAGH,OAAO,CAACC,OAAO,GAAGD,OAAO,CAACI,MAAnB,CAA7B;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAJ,EAAa;AACX,YAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCN,QAAAA,UAAU,CAACO,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAV;AACD,OAF2B,EAEzB,IAFyB,CAA5B;AAGA,aAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;AACD;AACF,GAPQ,EAON,CAACR,OAAD,CAPM,CAAT;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEM,OAAO,GAAG,QAAH,GAAc,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDF,eAAlD,CADF;AAGD;;AAED,eAAeL,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// const fadein = keyframes`\n//   from   { opacity:0; }\n//   to { opacity:1; }\n// `;\n\n// const fadeout = keyframes`\n//   from   { opacity:1; }\n//   to { opacity:0; }\n// `;\n\n// const stateToAnimation = {\n//   NO_SLIDE: 'none',\n//   SLIDE_OUT: fadein + ' forwards',\n//   SLIDE_IN: fadeout,\n// }\n\nconst Text = styled.h3`\n  text-align: center;\n  font-size: 1.7rem;\n  font-weight: 400;\n  letter-spacing: 1px;\n\n  ${'' /* opacity: 0;\n  animation: ${props => props.playing && `${fade} 3s infinite`}; */}\n\n  .fadeOut {\n    opacity: 0;\n    transition: opacity 3s;\n  }\n  .fadeIn {\n    opacity: 1;\n    transition: opacity 3s;\n  }\n`;\n\nfunction DynamicText({ playing, textArr }) {\n  const [textIdx, setTextIdx] = useState(0);\n  let textThatChanges = textArr[textIdx % textArr.length];\n\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        setTextIdx(index => index + 1);\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [playing]);\n\n  return (\n    <Text className={visible ? 'fadeIn' : 'fadeOut'}>{textThatChanges}</Text>\n  );\n}\n\nexport default DynamicText;\n"]},"metadata":{},"sourceType":"module"}