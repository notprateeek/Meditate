{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container } from './themeStyles';\nimport { Title, FlexColDiv } from '../../style/style';\nimport ProgressBar from '../progressBar/progressBar';\nimport TimerBtn from '../button/TimerBtn'; //import Player from '../../hooks/useAudio';\n\nimport PlayBtn from '../button/playBtn';\n\nconst Player = ({\n  url,\n  setStart,\n  playing,\n  toggle\n}) => {\n  const handleClick = () => {\n    toggle();\n    setStart();\n  };\n\n  return /*#__PURE__*/React.createElement(PlayBtn, {\n    onClick: handleClick,\n    playing: playing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  });\n};\n\nfunction Theme(props) {\n  const {\n    url\n  } = props; // Audio\n\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio]);\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n\n  const toggle = () => setPlaying(!playing);\n\n  audio.ontimeupdate = () => {\n    const currentTime = audio.currentTime;\n    let elapsed = min - currentTime;\n    console.log(elapsed);\n  }; /////\n\n\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({\n    min: 600,\n    sec: 0\n  });\n  const {\n    min,\n    sec\n  } = duration;\n  const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n  const handleClick = time => {\n    setDuration({\n      min: time,\n      sec: 0\n    });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  const updateTime = () => {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59\n        });\n      } else {\n        setDuration({ ...duration,\n          sec: sec - 1\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"No one save us but ourselves\"), /*#__PURE__*/React.createElement(ProgressBar, {\n    duration: duration,\n    displayTime: displayTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FlexColDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    url: url,\n    setStart: handleToggle,\n    toggle: toggle,\n    playing: playing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TimerBtn, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), props.children);\n} // function Theme(props) {\n//   const { url } = props;\n//   const [start, setStart] = useState(false);\n//   const [duration, setDuration] = useState({ min: 600, sec: 0 });\n//   const { min, sec } = duration;\n//   const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n//   const handleClick = time => {\n//     setDuration({ min: time, sec: 0 });\n//   };\n//   const handleToggle = () => {\n//     setStart(!start);\n//   };\n//   const updateTime = () => {\n//     if (start) {\n//       if (sec === 0) {\n//         setDuration({\n//           min: min - 1,\n//           sec: 59,\n//         });\n//       } else {\n//         setDuration({ ...duration, sec: sec - 1 });\n//       }\n//     }\n//   };\n//   useEffect(() => {\n//     if (start) {\n//       const token = setTimeout(updateTime, 1000);\n//       return function cleanUp() {\n//         clearTimeout(token);\n//       };\n//     }\n//   });\n//   return (\n//     <Container>\n//       <Title size=\"md\">No one save us but ourselves</Title>\n//       <ProgressBar duration={duration} displayTime={displayTime} />\n//       <FlexColDiv>\n//         <Player url={url} setStart={handleToggle} />\n//         <TimerBtn onClick={handleClick} />\n//       </FlexColDiv>\n//       {props.children}\n//     </Container>\n//   );\n// }\n\n\nexport default Theme;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js"],"names":["React","useState","useEffect","Container","Title","FlexColDiv","ProgressBar","TimerBtn","PlayBtn","Player","url","setStart","playing","toggle","handleClick","Theme","props","audio","Audio","setPlaying","play","pause","addEventListener","removeEventListener","ontimeupdate","currentTime","elapsed","min","console","log","start","duration","setDuration","sec","displayTime","Math","floor","time","handleToggle","updateTime","token","setTimeout","cleanUp","clearTimeout","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Container } from './themeStyles';\nimport { Title, FlexColDiv } from '../../style/style';\nimport ProgressBar from '../progressBar/progressBar';\nimport TimerBtn from '../button/TimerBtn';\n//import Player from '../../hooks/useAudio';\nimport PlayBtn from '../button/playBtn';\n\nconst Player = ({ url, setStart, playing, toggle }) => {\n  const handleClick = () => {\n    toggle();\n    setStart();\n  };\n\n  return <PlayBtn onClick={handleClick} playing={playing} />;\n};\n\nfunction Theme(props) {\n  const { url } = props;\n\n  // Audio\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n\n  const toggle = () => setPlaying(!playing);\n\n  audio.ontimeupdate = () => {\n    const currentTime = audio.currentTime;\n    let elapsed = min - currentTime;\n    console.log(elapsed);\n  };\n\n  /////\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({ min: 600, sec: 0 });\n  const { min, sec } = duration;\n\n  const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n  const handleClick = time => {\n    setDuration({ min: time, sec: 0 });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  const updateTime = () => {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59,\n        });\n      } else {\n        setDuration({ ...duration, sec: sec - 1 });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  return (\n    <Container>\n      <Title size=\"md\">No one save us but ourselves</Title>\n      <ProgressBar duration={duration} displayTime={displayTime} />\n      <FlexColDiv>\n        <Player\n          url={url}\n          setStart={handleToggle}\n          toggle={toggle}\n          playing={playing}\n        />\n        <TimerBtn onClick={handleClick} />\n      </FlexColDiv>\n      {props.children}\n    </Container>\n  );\n}\n\n// function Theme(props) {\n//   const { url } = props;\n\n//   const [start, setStart] = useState(false);\n//   const [duration, setDuration] = useState({ min: 600, sec: 0 });\n//   const { min, sec } = duration;\n\n//   const displayTime = `${Math.floor(min / 60)}:${Math.floor(sec % 60)}`;\n\n//   const handleClick = time => {\n//     setDuration({ min: time, sec: 0 });\n//   };\n\n//   const handleToggle = () => {\n//     setStart(!start);\n//   };\n\n//   const updateTime = () => {\n//     if (start) {\n//       if (sec === 0) {\n//         setDuration({\n//           min: min - 1,\n//           sec: 59,\n//         });\n//       } else {\n//         setDuration({ ...duration, sec: sec - 1 });\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (start) {\n//       const token = setTimeout(updateTime, 1000);\n\n//       return function cleanUp() {\n//         clearTimeout(token);\n//       };\n//     }\n//   });\n\n//   return (\n//     <Container>\n//       <Title size=\"md\">No one save us but ourselves</Title>\n//       <ProgressBar duration={duration} displayTime={displayTime} />\n//       <FlexColDiv>\n//         <Player url={url} setStart={handleToggle} />\n//         <TimerBtn onClick={handleClick} />\n//       </FlexColDiv>\n//       {props.children}\n//     </Container>\n//   );\n// }\n\nexport default Theme;\n"]},"metadata":{},"sourceType":"module"}