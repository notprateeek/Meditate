{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, PlayerContainer, FigureIcon, SVGIcon, Timer } from './themeStyles';\nimport MeditatorIcon from \"../../images/figure-2.svg\";\nimport { Title, FlexColDiv } from '../../style/style';\nimport Player from '../../hooks/useAudio';\nconst svgConfig = {\n  width: 453,\n  height: 453,\n  viewBox: '0 0 453 453',\n  fill: 'none',\n  xmlns: 'http://www.w3.org/2000/svg'\n};\nconst circleConfig = {\n  cx: 226.5,\n  cy: 226.5,\n  r: 216.5\n};\n\nfunction Theme(props) {\n  const {\n    url\n  } = props;\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({\n    min: 0,\n    sec: 0\n  });\n  const {\n    min,\n    sec\n  } = duration;\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  const handleClick = time => {\n    setDuration({\n      min: time,\n      sec: 0\n    });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  function updateTime() {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59\n        });\n      } else {\n        setDuration({ ...duration,\n          sec: sec - 1\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"No one save us but ourselves\"), /*#__PURE__*/React.createElement(PlayerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FigureIcon, {\n    src: MeditatorIcon,\n    alt: \"meditator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SVGIcon // class=\"track-outline\"\n  , Object.assign({}, svgConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", Object.assign({}, circleConfig, {\n    stroke: \"white\",\n    strokeWidth: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(SVGIcon // class=\"moving-outline\"\n  , Object.assign({}, svgConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", Object.assign({}, circleConfig, {\n    stroke: \"#018EBA\",\n    strokeWidth: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(FlexColDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, Math.floor(min / 60), \":\", Math.floor(sec % 60)), /*#__PURE__*/React.createElement(Player, {\n    url: url,\n    setStart: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleClick(300),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"5 min\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleClick(600),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"10 min\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleClick(900),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"15 min\")), props.children);\n}\n\nexport default Theme;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/theme/theme.js"],"names":["React","useState","useEffect","Container","PlayerContainer","FigureIcon","SVGIcon","Timer","Title","FlexColDiv","Player","svgConfig","width","height","viewBox","fill","xmlns","circleConfig","cx","cy","r","Theme","props","url","start","setStart","duration","setDuration","min","sec","token","setTimeout","updateTime","cleanUp","clearTimeout","handleClick","time","handleToggle","MeditatorIcon","Math","floor","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport {\n  Container,\n  PlayerContainer,\n  FigureIcon,\n  SVGIcon,\n  Timer,\n} from './themeStyles';\nimport MeditatorIcon from '../../images/figure-2.svg';\nimport { Title, FlexColDiv } from '../../style/style';\nimport Player from '../../hooks/useAudio';\n\nconst svgConfig = {\n  width: 453,\n  height: 453,\n  viewBox: '0 0 453 453',\n  fill: 'none',\n  xmlns: 'http://www.w3.org/2000/svg',\n};\n\nconst circleConfig = {\n  cx: 226.5,\n  cy: 226.5,\n  r: 216.5,\n};\n\nfunction Theme(props) {\n  const { url } = props;\n\n  const [start, setStart] = useState(false);\n  const [duration, setDuration] = useState({ min: 0, sec: 0 });\n  const { min, sec } = duration;\n\n  useEffect(() => {\n    if (start) {\n      const token = setTimeout(updateTime, 1000);\n\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  const handleClick = time => {\n    setDuration({ min: time, sec: 0 });\n  };\n\n  const handleToggle = () => {\n    setStart(!start);\n  };\n\n  function updateTime() {\n    if (start) {\n      if (sec === 0) {\n        setDuration({\n          min: min - 1,\n          sec: 59,\n        });\n      } else {\n        setDuration({ ...duration, sec: sec - 1 });\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <Title size=\"md\">No one save us but ourselves</Title>\n\n      <PlayerContainer>\n        <FigureIcon src={MeditatorIcon} alt=\"meditator\" />\n\n        <SVGIcon\n          // class=\"track-outline\"\n          {...svgConfig}>\n          <circle {...circleConfig} stroke=\"white\" strokeWidth=\"20\" />\n        </SVGIcon>\n        <SVGIcon\n          // class=\"moving-outline\"\n          {...svgConfig}>\n          <circle {...circleConfig} stroke=\"#018EBA\" strokeWidth=\"20\" />\n        </SVGIcon>\n      </PlayerContainer>\n\n      <FlexColDiv>\n        <Timer size=\"sm\">\n          {Math.floor(min / 60)}:{Math.floor(sec % 60)}\n        </Timer>\n        <Player url={url} setStart={handleToggle} />\n        <button onClick={() => handleClick(300)}>5 min</button>\n        <button onClick={() => handleClick(600)}>10 min</button>\n        <button onClick={() => handleClick(900)}>15 min</button>\n      </FlexColDiv>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default Theme;\n"]},"metadata":{},"sourceType":"module"}