{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/Desktop/web development/Project/metta/src/components/progressBar/progressBar.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport MeditatorIcon from \"../../assets/figure-2.svg\";\nimport { PlayerContainer, FigureIcon, SVGIcon, Timer } from '../theme/themeStyles';\n\nfunction ProgressBar({\n  duration,\n  currentTime,\n  playing,\n  elapsed\n}) {\n  const [length, setLength] = useState();\n  const circleRef = useRef();\n  let sec = Math.floor(elapsed % 60);\n  let min = Math.floor(elapsed / 60);\n  const progress = length - currentTime / duration * length;\n  useEffect(() => {\n    const circleLength = circleRef.current.getTotalLength();\n    setLength(circleLength);\n  }, []);\n  const svgConfig = {\n    width: 453,\n    height: 453,\n    viewBox: '0 0 453 453',\n    fill: 'none',\n    xmlns: 'http://www.w3.org/2000/svg'\n  };\n  const circleConfig = {\n    cx: 226.5,\n    cy: 226.5,\n    r: 216.5\n  };\n  return /*#__PURE__*/React.createElement(PlayerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FigureIcon, {\n    src: MeditatorIcon,\n    alt: \"meditator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SVGIcon, Object.assign({}, svgConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", Object.assign({}, circleConfig, {\n    stroke: \"#A0BDE6\",\n    strokeWidth: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(SVGIcon, Object.assign({}, svgConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", Object.assign({}, circleConfig, {\n    stroke: \"#3680EA\",\n    strokeWidth: \"20\",\n    ref: circleRef,\n    style: {\n      strokeDasharray: length,\n      strokeDashoffset: playing ? progress : length,\n      transform: [{\n        rotate: '-90, 75,75'\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Timer, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, `${min}: ${sec}`));\n}\n\nexport default ProgressBar; // function ProgressBar({ duration, displayTime }) {\n//   const circleRef = useRef();\n//   const [length, setLength] = useState();\n//   useEffect(() => {\n//     const circleLength = circleRef.current.getTotalLength();\n//     setLength(circleLength);\n//     console.log(circleLength);\n//   }, []);\n//   const svgConfig = {\n//     width: 453,\n//     height: 453,\n//     viewBox: '0 0 453 453',\n//     fill: 'none',\n//     xmlns: 'http://www.w3.org/2000/svg',\n//   };\n//   const circleConfig = {\n//     cx: 226.5,\n//     cy: 226.5,\n//     r: 216.5,\n//   };\n//   return (\n//     <PlayerContainer>\n//       <FigureIcon src={MeditatorIcon} alt=\"meditator\" />\n//       <SVGIcon\n//         // class=\"track-outline\"\n//         {...svgConfig}>\n//         <circle {...circleConfig} stroke=\"white\" strokeWidth=\"20\" />\n//       </SVGIcon>\n//       <SVGIcon\n//         // class=\"moving-outline\"\n//         {...svgConfig}>\n//         <circle\n//           {...circleConfig}\n//           stroke=\"#018EBA\"\n//           strokeWidth=\"20\"\n//           ref={circleRef}\n//           //style={{ strokeDasharray: length, strokeDashoffset: length }}\n//         />\n//       </SVGIcon>\n//       <Timer size=\"sm\">{displayTime}</Timer>\n//     </PlayerContainer>\n//   );\n// }\n// export default ProgressBar;","map":{"version":3,"sources":["/Users/suyeonkang/Desktop/web development/Project/metta/src/components/progressBar/progressBar.js"],"names":["React","useRef","useEffect","useState","styled","PlayerContainer","FigureIcon","SVGIcon","Timer","ProgressBar","duration","currentTime","playing","elapsed","length","setLength","circleRef","sec","Math","floor","min","progress","circleLength","current","getTotalLength","svgConfig","width","height","viewBox","fill","xmlns","circleConfig","cx","cy","r","MeditatorIcon","strokeDasharray","strokeDashoffset","transform","rotate"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport MeditatorIcon from '../../assets/figure-2.svg';\nimport {\n  PlayerContainer,\n  FigureIcon,\n  SVGIcon,\n  Timer,\n} from '../theme/themeStyles';\n\nfunction ProgressBar({ duration, currentTime, playing, elapsed }) {\n  const [length, setLength] = useState();\n\n  const circleRef = useRef();\n  let sec = Math.floor(elapsed % 60);\n  let min = Math.floor(elapsed / 60);\n  const progress = length - (currentTime / duration) * length;\n\n  useEffect(() => {\n    const circleLength = circleRef.current.getTotalLength();\n    setLength(circleLength);\n  }, []);\n\n  const svgConfig = {\n    width: 453,\n    height: 453,\n    viewBox: '0 0 453 453',\n    fill: 'none',\n    xmlns: 'http://www.w3.org/2000/svg',\n  };\n\n  const circleConfig = {\n    cx: 226.5,\n    cy: 226.5,\n    r: 216.5,\n  };\n\n  return (\n    <PlayerContainer>\n      <FigureIcon src={MeditatorIcon} alt=\"meditator\" />\n\n      <SVGIcon {...svgConfig}>\n        <circle {...circleConfig} stroke=\"#A0BDE6\" strokeWidth=\"20\" />\n      </SVGIcon>\n      <SVGIcon {...svgConfig}>\n        <circle\n          {...circleConfig}\n          stroke=\"#3680EA\"\n          strokeWidth=\"20\"\n          ref={circleRef}\n          style={{\n            strokeDasharray: length,\n            strokeDashoffset: playing ? progress : length,\n            transform: [{ rotate: '-90, 75,75' }],\n          }}\n        />\n      </SVGIcon>\n\n      <Timer size=\"sm\">{`${min}: ${sec}`}</Timer>\n    </PlayerContainer>\n  );\n}\n\nexport default ProgressBar;\n\n// function ProgressBar({ duration, displayTime }) {\n//   const circleRef = useRef();\n//   const [length, setLength] = useState();\n\n//   useEffect(() => {\n//     const circleLength = circleRef.current.getTotalLength();\n//     setLength(circleLength);\n//     console.log(circleLength);\n//   }, []);\n\n//   const svgConfig = {\n//     width: 453,\n//     height: 453,\n//     viewBox: '0 0 453 453',\n//     fill: 'none',\n//     xmlns: 'http://www.w3.org/2000/svg',\n//   };\n\n//   const circleConfig = {\n//     cx: 226.5,\n//     cy: 226.5,\n//     r: 216.5,\n//   };\n//   return (\n//     <PlayerContainer>\n//       <FigureIcon src={MeditatorIcon} alt=\"meditator\" />\n\n//       <SVGIcon\n//         // class=\"track-outline\"\n//         {...svgConfig}>\n//         <circle {...circleConfig} stroke=\"white\" strokeWidth=\"20\" />\n//       </SVGIcon>\n//       <SVGIcon\n//         // class=\"moving-outline\"\n//         {...svgConfig}>\n//         <circle\n//           {...circleConfig}\n//           stroke=\"#018EBA\"\n//           strokeWidth=\"20\"\n//           ref={circleRef}\n//           //style={{ strokeDasharray: length, strokeDashoffset: length }}\n//         />\n//       </SVGIcon>\n\n//       <Timer size=\"sm\">{displayTime}</Timer>\n//     </PlayerContainer>\n//   );\n// }\n\n// export default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}